name: CI
on:
  - push
  - workflow_dispatch

concurrency:
  group: ${{github.workflow || github.ref_name}}
  cancel-in-progress: true

env:
  SERVICE_VERSION: 1.0.0-beta # TODO: Get this info from source code
  PYTHON_VERSION: '3.10'
  DOCKER_REGISTRY: quay.io
  COMPANY_NAME: detective.solutions

jobs:
  Run-Tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10']

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          wget -qO- https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          sudo add-apt-repository "$(wget -qO- https://packages.microsoft.com/config/ubuntu/16.04/mssql-server-2017.list)"
          cat /etc/odbcinst.ini
          sudo apt-get update
          pip install tox tox-gh-actions

      - name: Run tests
        continue-on-error: true # TODO: Remove when tests are fixed!
        run: tox

  Build:
    runs-on: ubuntu-latest
    needs: [Run-Tests]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          wget -qO- https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          sudo add-apt-repository "$(wget -qO- https://packages.microsoft.com/config/ubuntu/16.04/mssql-server-2017.list)"
          cat /etc/odbcinst.ini
          sudo apt-get update
          pip install tox tox-gh-actions

      - name: Login to quay.io
        uses: docker/login-action@v2
        with:
          registry: ${{env.DOCKER_REGISTRY}}
          username: ${{secrets.DOCKER_REGISTRY_USER}}
          password: ${{secrets.DOCKER_REGISTRY_TOKEN}}

      - name: Create image tag
        run: |
          echo "::set-output name=image-tag::${{env.DOCKER_REGISTRY}}/${{env.COMPANY_NAME}}/query-service:${{env.SERVICE_VERSION}}"
        id: image-tag

      - name: Build and push docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: ${{steps.image-tag.outputs.image-tag}}
          push: true
