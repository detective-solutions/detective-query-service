name: Tests
env:
  SQL_DATABASE: testdb
  SQL_USER: test_user
  SQL_PASSWORD: test
  MYSQL_HOST: mysql-master
  POSTGRES_HOST: postgres
  NODE_ENV: test
on:
  - push
  - pull_request

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9']
    services:
      mysql-master:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: ${{ env.SQL_DATABASE }}
          MYSQL_USER: ${{ env.SQL_USER }}
          MYSQL_PASSWORD: ${{ env.SQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ env.SQL_PASSWORD }}
        options: >-
          --name=mysql-master
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_DATABASE: ${{ env.SQL_DATABASE }}
          POSTGRES_USER: ${{ env.SQL_USER }}
          POSTGRES_PASSWORD: ${{ env.SQL_PASSWORD }}
          POSTGRES_ROOT_PASSWORD: ${{ env.SQL_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Install SQL SERVER for Linux
        run: docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=your_Strong_Password' -p 1433:1433 -d microsoft/mssql-server-linux
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Test with tox
        run: tox
